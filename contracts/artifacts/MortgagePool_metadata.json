{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "FeeValue",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "mToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "mTokenAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "pTokenAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenPrice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "pTokenPrice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint88",
						"name": "rate",
						"type": "uint88"
					}
				],
				"name": "LedgerLog",
				"type": "event"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "mortgageAssets",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "parassetAssets",
								"type": "uint256"
							},
							{
								"internalType": "uint160",
								"name": "blockHeight",
								"type": "uint160"
							},
							{
								"internalType": "uint88",
								"name": "rate",
								"type": "uint88"
							}
						],
						"internalType": "struct MortgagePool.PersonalLedger",
						"name": "pLedger",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "tokenPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pTokenPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint80",
						"name": "kValue",
						"type": "uint80"
					},
					{
						"internalType": "uint40",
						"name": "r0Value",
						"type": "uint40"
					}
				],
				"name": "_checkLine",
				"outputs": [],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "_governance",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint88",
						"name": "rate",
						"type": "uint88"
					}
				],
				"name": "coin",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "decrease",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "inputToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "inputTokenAmount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "outputToken",
						"type": "address"
					}
				],
				"name": "getDecimalConversion",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "parassetAssets",
						"type": "uint256"
					},
					{
						"internalType": "uint160",
						"name": "blockHeight",
						"type": "uint160"
					},
					{
						"internalType": "uint256",
						"name": "rate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "nowRate",
						"type": "uint256"
					},
					{
						"internalType": "uint40",
						"name": "r0Value",
						"type": "uint40"
					}
				],
				"name": "getFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFlag",
				"outputs": [
					{
						"internalType": "uint96",
						"name": "",
						"type": "uint96"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "uTokenPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint88",
						"name": "maxRateNum",
						"type": "uint88"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "getInfoRealTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "mortgageRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxSubM",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxAddP",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getInsurancePool",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					}
				],
				"name": "getK",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "getLedger",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "mortgageAssets",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "parassetAssets",
						"type": "uint256"
					},
					{
						"internalType": "uint160",
						"name": "blockHeight",
						"type": "uint160"
					},
					{
						"internalType": "uint88",
						"name": "rate",
						"type": "uint88"
					},
					{
						"internalType": "bool",
						"name": "created",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					}
				],
				"name": "getLedgerArrayNum",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "getLedgerIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					}
				],
				"name": "getLiquidateRate",
				"outputs": [
					{
						"internalType": "uint40",
						"name": "",
						"type": "uint40"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					}
				],
				"name": "getMaxRate",
				"outputs": [
					{
						"internalType": "uint88",
						"name": "",
						"type": "uint88"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "mortgageAssets",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "parassetAssets",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pTokenPrice",
						"type": "uint256"
					}
				],
				"name": "getMortgageRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOneYear",
				"outputs": [
					{
						"internalType": "uint96",
						"name": "",
						"type": "uint96"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getPTokenAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getPriceController",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					}
				],
				"name": "getR0",
				"outputs": [
					{
						"internalType": "uint40",
						"name": "",
						"type": "uint40"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getUnderlyingToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "increaseCoinage",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "governance",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pTokenAmountLimit",
						"type": "uint256"
					}
				],
				"name": "liquidation",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "reducedCoinage",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "pTokenAdd",
						"type": "address"
					},
					{
						"internalType": "uint96",
						"name": "oneYear",
						"type": "uint96"
					},
					{
						"internalType": "address",
						"name": "underlyingTokenAdd",
						"type": "address"
					},
					{
						"internalType": "uint96",
						"name": "flag",
						"type": "uint96"
					}
				],
				"name": "setConfig",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint96",
						"name": "num",
						"type": "uint96"
					}
				],
				"name": "setFlag",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "uToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "pToken",
						"type": "address"
					}
				],
				"name": "setInfo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "add",
						"type": "address"
					}
				],
				"name": "setInsurancePool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "uint80",
						"name": "num",
						"type": "uint80"
					}
				],
				"name": "setK",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "uint40",
						"name": "num",
						"type": "uint40"
					}
				],
				"name": "setLiquidateRate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "uint88",
						"name": "num",
						"type": "uint88"
					}
				],
				"name": "setMaxRate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "allow",
						"type": "bool"
					}
				],
				"name": "setMortgageAllow",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint96",
						"name": "num",
						"type": "uint96"
					}
				],
				"name": "setOneYear",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "add",
						"type": "address"
					}
				],
				"name": "setPriceController",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "uint40",
						"name": "num",
						"type": "uint40"
					}
				],
				"name": "setR0",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mortgageToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "supplement",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newGovernance",
						"type": "address"
					}
				],
				"name": "update",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"_checkLine((uint256,uint256,uint160,uint88),uint256,uint256,uint80,uint40)": {
					"details": "Check the liquidation line",
					"params": {
						"pLedger": "debt warehouse ledger",
						"pTokenPrice": "PToken price(1 ETH = ? pToken)",
						"tokenPrice": "Mortgage asset price(1 ETH = ? token)"
					}
				},
				"coin(address,uint256,uint88)": {
					"details": "Mortgage asset casting PToken",
					"params": {
						"amount": "amount of mortgaged assets",
						"mortgageToken": "mortgage asset address",
						"rate": "custom mortgage rate"
					}
				},
				"decrease(address,uint256)": {
					"details": "Reduce mortgage assets",
					"params": {
						"amount": "amount of mortgaged assets",
						"mortgageToken": "mortgage asset address"
					}
				},
				"getDecimalConversion(address,uint256,address)": {
					"details": "Uniform accuracy",
					"params": {
						"inputToken": "Initial token",
						"inputTokenAmount": "Amount of token",
						"outputToken": "Converted token"
					},
					"returns": {
						"_0": "stability Amount of outputToken"
					}
				},
				"getFee(uint256,uint160,uint256,uint256,uint40)": {
					"details": "Calculate the stability fee",
					"params": {
						"blockHeight": "The block height of the last operation",
						"nowRate": "Current mortgage rate (not including stability fee)",
						"parassetAssets": "Amount of debt(PToken,Stability fee not included)",
						"r0Value": "Market base interest rate",
						"rate": "Mortgage rate(Initial mortgage rate,Mortgage rate after the last operation)"
					},
					"returns": {
						"_0": "fee"
					}
				},
				"getFlag()": {
					"details": "View the flag num",
					"returns": {
						"_0": "flag num"
					}
				},
				"getInfoRealTime(address,uint256,uint256,uint88,address)": {
					"details": "Get real-time data of the current debt warehouse",
					"params": {
						"maxRateNum": "Maximum mortgage rate",
						"mortgageToken": "Mortgage asset address",
						"owner": "Debt owner",
						"tokenPrice": "Mortgage asset price(1 ETH = ? token)",
						"uTokenPrice": "Underlying asset price(1 ETH = ? Underlying asset)"
					},
					"returns": {
						"fee": "Stability fee",
						"maxAddP": "Maximum number of coins that can be added",
						"maxSubM": "The maximum amount of mortgage assets can be reduced",
						"mortgageRate": "Real-time mortgage rate(Including stability fee)"
					}
				},
				"getInsurancePool()": {
					"details": "View the insurance pool address",
					"returns": {
						"_0": "insurance pool address"
					}
				},
				"getK(address)": {
					"details": "View the k value",
					"params": {
						"mortgageToken": "Mortgage asset address"
					},
					"returns": {
						"_0": "k value"
					}
				},
				"getLedger(address,address)": {
					"details": "View debt warehouse data",
					"params": {
						"mortgageToken": "mortgage asset address",
						"owner": "debt owner"
					},
					"returns": {
						"blockHeight": "the block height of the last operation",
						"created": "is it created",
						"mortgageAssets": "amount of mortgaged assets",
						"parassetAssets": "amount of debt(PToken,Stability fee not included)",
						"rate": "Mortgage rate(Initial mortgage rate,Mortgage rate after the last operation)"
					}
				},
				"getLedgerArrayNum(address)": {
					"details": "View the debt array length",
					"params": {
						"mortgageToken": "mortgage asset address"
					},
					"returns": {
						"_0": "debt array length"
					}
				},
				"getLedgerIndex(address,address)": {
					"details": "View the debt index",
					"params": {
						"mortgageToken": "mortgage asset address",
						"owner": "debt owner"
					},
					"returns": {
						"_0": "index"
					}
				},
				"getLiquidateRate(address)": {
					"details": "View the liquidation rate",
					"returns": {
						"_0": "liquidation rate"
					}
				},
				"getMaxRate(address)": {
					"details": "View the maximum mortgage rate",
					"params": {
						"mortgageToken": "Mortgage asset address"
					},
					"returns": {
						"_0": "maximum mortgage rate"
					}
				},
				"getMortgageRate(uint256,uint256,uint256,uint256)": {
					"details": "Calculate the mortgage rate",
					"params": {
						"mortgageAssets": "Amount of mortgaged assets",
						"pTokenPrice": "PToken price(1 ETH = ? pToken)",
						"parassetAssets": "Amount of debt",
						"tokenPrice": "Mortgage asset price(1 ETH = ? token)"
					},
					"returns": {
						"_0": "mortgage rate"
					}
				},
				"getOneYear()": {
					"details": "View the amount of blocks produced in a year",
					"returns": {
						"_0": "amount of blocks produced in a year"
					}
				},
				"getPTokenAddress()": {
					"details": "View the pToken address",
					"returns": {
						"_0": "pToken address"
					}
				},
				"getPriceController()": {
					"details": "View the priceController contract address",
					"returns": {
						"_0": "priceController contract address"
					}
				},
				"getR0(address)": {
					"details": "View the market base interest rate",
					"returns": {
						"_0": "market base interest rate"
					}
				},
				"getUnderlyingToken()": {
					"details": "View the underlyingToken address",
					"returns": {
						"_0": "underlyingToken address"
					}
				},
				"increaseCoinage(address,uint256)": {
					"details": "Increase debt (increase coinage)",
					"params": {
						"amount": "amount of debt",
						"mortgageToken": "mortgage asset address"
					}
				},
				"initialize(address)": {
					"details": "To support open-zeppelin/upgrades",
					"params": {
						"governance": "IParassetGovernance implementation contract address"
					}
				},
				"liquidation(address,address,uint256,uint256)": {
					"details": "Liquidation of debt",
					"params": {
						"account": "debt owner address",
						"amount": "amount of mortgaged assets",
						"mortgageToken": "mortgage asset address",
						"pTokenAmountLimit": "pay PToken limit"
					}
				},
				"reducedCoinage(address,uint256)": {
					"details": "Reduce debt (increase coinage)",
					"params": {
						"amount": "amount of debt",
						"mortgageToken": "mortgage asset address"
					}
				},
				"setConfig(address,uint96,address,uint96)": {
					"details": "Set mortgage pool parameters",
					"params": {
						"flag": "current state of the contract",
						"oneYear": "number of blocks in a year",
						"pTokenAdd": "pToken address",
						"underlyingTokenAdd": "underlying asset address"
					}
				},
				"setFlag(uint96)": {
					"details": "Set contract status",
					"params": {
						"num": "0: pause, 1: active, 2: out only"
					}
				},
				"setInfo(address,address)": {
					"details": "Set the underlying asset and PToken mapping and",
					"params": {
						"pToken": "PToken address",
						"uToken": "underlying asset address"
					}
				},
				"setInsurancePool(address)": {
					"details": "Set insurance pool contract",
					"params": {
						"add": "insurance pool contract"
					}
				},
				"setK(address,uint80)": {
					"details": "Set K value",
					"params": {
						"mortgageToken": "mortgage asset address",
						"num": "K value"
					}
				},
				"setLiquidateRate(address,uint40)": {
					"details": "Set liquidation rate",
					"params": {
						"num": "liquidation rate, 90000=90%"
					}
				},
				"setMaxRate(address,uint88)": {
					"details": "Set the maximum mortgage rate",
					"params": {
						"mortgageToken": "mortgage asset address",
						"num": "maximum mortgage rate(num = ? * 1000)"
					}
				},
				"setMortgageAllow(address,bool)": {
					"details": "Allow asset mortgage to generate PToken",
					"params": {
						"allow": "allow mortgage",
						"mortgageToken": "mortgage asset address"
					}
				},
				"setOneYear(uint96)": {
					"details": "Set the amount of blocks produced in a year",
					"params": {
						"num": "amount of blocks produced in a year"
					}
				},
				"setPriceController(address)": {
					"details": "Set priceController contract address",
					"params": {
						"add": "priceController contract address"
					}
				},
				"setR0(address,uint40)": {
					"details": "Set market base interest rate",
					"params": {
						"num": "market base interest rate(num = ? * 1 ether)"
					}
				},
				"supplement(address,uint256)": {
					"details": "Increase mortgage assets",
					"params": {
						"amount": "amount of mortgaged assets",
						"mortgageToken": "mortgage asset address"
					}
				},
				"update(address)": {
					"details": "Rewritten in the implementation contract, for load other contract addresses. Call       super.update(newGovernance) when overriding, and override method without onlyGovernance",
					"params": {
						"newGovernance": "IParassetGovernance implementation contract address"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"MortgagePool.sol": "MortgagePool"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"MortgagePool.sol": {
			"keccak256": "0x59fa6caf39c6af4f37da2d8050a204ff67cc85042378d2cd097d58ebefdd94e1",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://873f5d17c3f88ea2176cb2e1a2ac47d5f65563cb6a5992b37d98d23b8055fc45",
				"dweb:/ipfs/QmXgpKt2HEB1jyvp2hrF3PbeZYdUQ9UCuoWCXBLUZrCuSS"
			]
		},
		"ParassetBase.sol": {
			"keccak256": "0x926b3f336e15a50a9a51704a165405e659939f24dd3ca8e30fcd6d217d11f8a0",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://1e83b9716a7b09418ffad207c22099cc9803d00cde6a93bdf6807154686d13fd",
				"dweb:/ipfs/QmZn4t25hNEkhVmhF1gHvt5ShX8xtGUSsAyrWgZeqkRqGS"
			]
		},
		"iface/IERC20.sol": {
			"keccak256": "0x5ff433ca7071a5539e9ff446bac836616f5fac8c630dd0a27bc47a3a422ae70d",
			"license": "MIT",
			"urls": [
				"bzz-raw://d4139546bf184be5bbfd1aa40e52d1e597c07c662605afb4a35945a8d5776c8b",
				"dweb:/ipfs/QmfEkR9yBfLF7zdFJJh9dmbssVXcRdxtMyCeCpPr62v8Rb"
			]
		},
		"iface/IInsurancePool.sol": {
			"keccak256": "0x94ed8eca44e9529bd26d44dc52f6de6f8fe75bd553d0ffca159b68b0df732bb9",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://0b1f59bbb59ccd114048827c2facd1f5615171805e36f3b3d768c0f542c62431",
				"dweb:/ipfs/QmXodQriuHhyg7SkPEwESqNd7teZ69vpEiYCgjTU7eBsic"
			]
		},
		"iface/IParasset.sol": {
			"keccak256": "0xc8fad54a27bc6e6cd187fd06cf703d1b6c32e9b94498a2924c010f2f791f2ed8",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://a4bf5fa656704ec0d4cd2bdab6632a62a473fdbdaa129589ca47e647b25cf88c",
				"dweb:/ipfs/QmV7kd71wqp8kojCsZAJpJdFhZYPZLJiDLPa2SEYXZsesS"
			]
		},
		"iface/IParassetGovernance.sol": {
			"keccak256": "0xf6a3edcc61224c9254201fa2d0956efa75aef4cfde6e26683826ca3f08ef0ee0",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://ef70221a738c223b1ebe9510049a7a0de607a8d43f9577b1dff3dcf117d2e3e1",
				"dweb:/ipfs/QmfAst8UmsvpGk9Fno2p1E48yarF8iunw62AzL3Ca6aMNA"
			]
		},
		"iface/IPriceController.sol": {
			"keccak256": "0x2e437dbcb6cd41bc9621083247e9e8a300355ed6bd49b7d46daebee5fea895be",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://14272ed0937fb1f0f715671b5a0e72519ed60e21253de078190262a91904619f",
				"dweb:/ipfs/QmPCMp525wZVUkyjv5hDabx5Kgj12HMBzTDjXwV4usrf2A"
			]
		},
		"lib/TransferHelper.sol": {
			"keccak256": "0x5cd7b677741700cf5ab9fbd4702cc2371340bf1cfcff42da218fe859d2088010",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://e90962978395401dc5422cfdb233f3a9cd244bfa9e83c6189fc18714c993c757",
				"dweb:/ipfs/QmYma7FWG7isyP2FTchi669k11EYAGo9xfzb7RJSyUWAJS"
			]
		}
	},
	"version": 1
}