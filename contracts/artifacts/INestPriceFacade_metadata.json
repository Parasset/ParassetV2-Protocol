{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "getConfig",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint16",
								"name": "singleFee",
								"type": "uint16"
							},
							{
								"internalType": "uint16",
								"name": "doubleFee",
								"type": "uint16"
							},
							{
								"internalType": "uint8",
								"name": "normalFlag",
								"type": "uint8"
							}
						],
						"internalType": "struct INestPriceFacade.Config",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "paybackAddress",
						"type": "address"
					}
				],
				"name": "triggeredPriceInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "blockNumber",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "avgPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "sigmaSQ",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "paybackAddress",
						"type": "address"
					}
				],
				"name": "triggeredPriceInfo2",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "blockNumber",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "avgPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "sigmaSQ",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "ntokenBlockNumber",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "ntokenPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "ntokenAvgPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "ntokenSigmaSQ",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getConfig()": {
					"details": "Get configuration",
					"returns": {
						"_0": "Configuration object"
					}
				},
				"triggeredPriceInfo(address,address)": {
					"details": "Get the full information of latest trigger price",
					"params": {
						"paybackAddress": "As the charging fee may change, it is suggested that the caller pay more fees, and the excess fees will be returned through this address",
						"tokenAddress": "Destination token address"
					},
					"returns": {
						"avgPrice": "Average price",
						"blockNumber": "The block number of price",
						"price": "The token price. (1eth equivalent to (price) token)",
						"sigmaSQ": "The square of the volatility (18 decimal places). The current implementation assumes that          the volatility cannot exceed 1. Correspondingly, when the return value is equal to 999999999999996447,         it means that the volatility has exceeded the range that can be expressed"
					}
				},
				"triggeredPriceInfo2(address,address)": {
					"details": "Get the full information of latest trigger price. (token and ntoken)",
					"params": {
						"paybackAddress": "As the charging fee may change, it is suggested that the caller pay more fees, and the excess fees will be returned through this address",
						"tokenAddress": "Destination token address"
					},
					"returns": {
						"avgPrice": "Average price",
						"blockNumber": "The block number of price",
						"ntokenAvgPrice": "Average price of ntoken",
						"ntokenBlockNumber": "The block number of ntoken price",
						"ntokenPrice": "The ntoken price. (1eth equivalent to (price) ntoken)",
						"ntokenSigmaSQ": "The square of the volatility (18 decimal places). The current implementation assumes that         the volatility cannot exceed 1. Correspondingly, when the return value is equal to 999999999999996447,         it means that the volatility has exceeded the range that can be expressed",
						"price": "The token price. (1eth equivalent to (price) token)",
						"sigmaSQ": "The square of the volatility (18 decimal places). The current implementation assumes that          the volatility cannot exceed 1. Correspondingly, when the return value is equal to 999999999999996447,          it means that the volatility has exceeded the range that can be expressed"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"PriceController_flat.sol": "INestPriceFacade"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"PriceController_flat.sol": {
			"keccak256": "0x27f37128aa466050e86704b5188179838f127817a9d039c2228ee4b2c5435edd",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://4fe8084b3c87858cc5ff606d4ed1b7baaf472b6fa984fc067fe2464e3471ff75",
				"dweb:/ipfs/QmTAfy546tATu6zcb8c9UVabtKUcpRcdz5ois9vyk5Uc3o"
			]
		}
	},
	"version": 1
}